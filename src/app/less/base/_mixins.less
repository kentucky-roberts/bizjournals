// Clearfix
// Source: http://nicolasgallagher.com/micro-clearfix-hack/
//
// For modern browsers
// 1. The space content is one way to avoid an Opera bug when the
//    contenteditable attribute is included anywhere else in the document.
//    Otherwise it causes space to appear at the top and bottom of elements
//    that are clearfixed.
// 2. The use of `table` rather than `block` is only necessary if using
//    `:before` to contain the top-margins of child elements.
.clear-floats() {
  &:before,
  &:after {
    content: " "; /* 1 */
    display: table; /* 2 */
  }
  &:after {
    clear: both;
  }
}
.unclear-floats() {
  &:before,
  &:after {
    content: ""; /* 1 */
    display: inherit; /* 2 */
  }
  &:after {
    clear: none;
  }
}

.hidden-text() {
    position: absolute;
    top: -9999px;
    left: -9999px;
}
.ligatures() {
    -webkit-font-feature-settings: "liga";
     webkit-font-feature-settings: "liga";
}

.box-sizing(@box-sizing) {
    -webkit-box-sizing: @box-sizing;
       -moz-box-sizing: @box-sizing;
            box-sizing: @box-sizing;
}
.box-shadow(@shadow) {
  -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
          box-shadow: @shadow;
}

.striped() {
    background-image: url('../img/stripes-gray-12px.png');
    background-repeat: repeat;
}
.striped--white() {
    background-image: url('../img/stripes-12px.png');
    background-repeat: repeat;
}
.branded(@background: false; @text: false) {
    .ruby & {
        & when (@background = true) { background: @ruby; }
        & when (@text = true) { color: @ruby; }
    }
    .sapphire & {
        & when (@background = true) { background: @sapphire; }
        & when (@text = true) { color: @sapphire; }
    }
    .emerald & {
        & when (@background = true) { background: @emerald; }
        & when (@text = true) { color: @emerald; }
    }
}
.branded-border-state() {
	content: "";
    display: block;
    position: absolute;
    right: 0;
    bottom: 0;
    left: 0;

    height: 2px;

    .ruby &,
 	.ruby& {
        background: @ruby;
    }
    .sapphire &,
	.sapphire& {
        background: @sapphire;
    }
    .emerald &,
	.emerald& {
        background: @emerald;
    }
}
.thumb-outline() {
    content: "";
    display: block;
    position: absolute;
    z-index: 1;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    border: 1px solid fade(@black, 8%);
}
.thumb-outline-hover() {
    border-color: fade(@black, 12%);
}
// Opacity
.opacity(@opacity) {
  opacity: @opacity;
  // IE8 filter
  @opacity-ie: (@opacity * 100);
  filter: ~"alpha(opacity=@{opacity-ie})";
}
// Webkit-style focus
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// More easily include all the states for responsive-utilities.less.
.responsive-visibility() {
  display: block !important;
  table&  { display: table; }
  tr&     { display: table-row !important; }
  th&,
  td&     { display: table-cell !important; }
}

.responsive-invisibility() {
  display: none !important;
}
/*------------------------------------*
    $TRANSITIONS
\*------------------------------------*/
.transition(@transition) {
  -webkit-transition: @transition;
       -o-transition: @transition;
          transition: @transition;
}
.transition-property(@transition-property) {
  -webkit-transition-property: @transition-property;
          transition-property: @transition-property;
}
.transition-delay(@transition-delay) {
  -webkit-transition-delay: @transition-delay;
          transition-delay: @transition-delay;
}
.transition-duration(@transition-duration) {
  -webkit-transition-duration: @transition-duration;
          transition-duration: @transition-duration;
}
.transition-timing-function(@timing-function) {
  -webkit-transition-timing-function: @timing-function;
          transition-timing-function: @timing-function;
}
.transition-transform(@transition) {
  -webkit-transition: -webkit-transform @transition;
     -moz-transition: -moz-transform @transition;
       -o-transition: -o-transform @transition;
          transition: transform @transition;
}
/*------------------------------------*
    $TRANSFORMATIONS
\*------------------------------------*/
.scale(@ratio) {
  -webkit-transform: scale(@ratio);
      -ms-transform: scale(@ratio); // IE9 only
       -o-transform: scale(@ratio);
          transform: scale(@ratio);
}
.scale(@ratioX; @ratioY) {
  -webkit-transform: scale(@ratioX, @ratioY);
      -ms-transform: scale(@ratioX, @ratioY); // IE9 only
       -o-transform: scale(@ratioX, @ratioY);
          transform: scale(@ratioX, @ratioY);
}
.scaleX(@ratio) {
  -webkit-transform: scaleX(@ratio);
      -ms-transform: scaleX(@ratio); // IE9 only
       -o-transform: scaleX(@ratio);
          transform: scaleX(@ratio);
}
.scaleY(@ratio) {
  -webkit-transform: scaleY(@ratio);
      -ms-transform: scaleY(@ratio); // IE9 only
       -o-transform: scaleY(@ratio);
          transform: scaleY(@ratio);
}
.skew(@x; @y) {
  -webkit-transform: skewX(@x) skewY(@y);
      -ms-transform: skewX(@x) skewY(@y); // See https://github.com/twbs/bootstrap/issues/4885; IE9+
       -o-transform: skewX(@x) skewY(@y);
          transform: skewX(@x) skewY(@y);
}
.translate(@x; @y) {
  -webkit-transform: translate(@x, @y);
      -ms-transform: translate(@x, @y); // IE9 only
       -o-transform: translate(@x, @y);
          transform: translate(@x, @y);
}
.translate3d(@x; @y; @z) {
  -webkit-transform: translate3d(@x, @y, @z);
          transform: translate3d(@x, @y, @z);
}
.rotate(@degrees) {
  -webkit-transform: rotate(@degrees);
      -ms-transform: rotate(@degrees); // IE9 only
       -o-transform: rotate(@degrees);
          transform: rotate(@degrees);
}
.rotateX(@degrees) {
  -webkit-transform: rotateX(@degrees);
      -ms-transform: rotateX(@degrees); // IE9 only
       -o-transform: rotateX(@degrees);
          transform: rotateX(@degrees);
}
.rotateY(@degrees) {
  -webkit-transform: rotateY(@degrees);
      -ms-transform: rotateY(@degrees); // IE9 only
       -o-transform: rotateY(@degrees);
          transform: rotateY(@degrees);
}
.perspective(@perspective) {
  -webkit-perspective: @perspective;
     -moz-perspective: @perspective;
          perspective: @perspective;
}
.perspective-origin(@perspective) {
  -webkit-perspective-origin: @perspective;
     -moz-perspective-origin: @perspective;
          perspective-origin: @perspective;
}
.transform-origin(@origin) {
  -webkit-transform-origin: @origin;
     -moz-transform-origin: @origin;
      -ms-transform-origin: @origin; // IE9 only
          transform-origin: @origin;
}
.transform(@args) {
  -webkit-transform: @args;
     -moz-transform: @args;
      -ms-transform: @args; // IE9 only
          transform: @args;
}


.backface-visibility(@backface-visibility) {
  -webkit-backface-visibility: @backface-visibility;
     -moz-backface-visibility: @backface-visibility;
      -ms-backface-visibility: @backface-visibility;
       -o-backface-visibility: @backface-visibility;
          backface-visibility: @backface-visibility;
}


@import "_mixins/_gradients.less";
@import "_mixins/_buttons.less";